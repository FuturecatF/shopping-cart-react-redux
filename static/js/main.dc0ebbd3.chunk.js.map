{"version":3,"sources":["components/Card/Card.jsx","components/Main/Main.jsx","components/CartListFooter/CartListFooter.jsx","components/CartList/CartList.jsx","components/Cart/Cart.jsx","components/Header/Header.jsx","redux/types.js","components/App/App.jsx","redux/actions.js","reportWebVitals.js","redux/cardsReducer.js","redux/cartReducer.js","redux/rootReducer.js","redux/sagas.js","redux/store.js","index.jsx"],"names":["Card","card","className","src","image","alt","name","price","Main","cards","map","Math","random","CartListFooter","totalPrice","useSelector","state","cart","products","reduce","prev","next","quantity","CartList","item","Cart","dispatch","goods","i","Header","totalQuantity","to","REQUEST_CARDS","FETCH_CARDS","ADD_PRODUCT","REMOVE_PRODUCT","REMOVE_ITEM","App","useDispatch","fetchedCards","React","useEffect","type","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","action","payload","forEach","id","existingCartItem","find","filter","sagaWatcher","sagaWorker","takeEvery","call","fetchCards","put","console","log","message","a","fetch","response","json","persistConfig","key","storage","persistedReducer","persistReducer","saga","createSagaMiddleware","store","createStore","compose","applyMiddleware","persistor","persistStore","run","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.dc0ebbd3.chunk.js","sourcesContent":["import './Card.css';\r\nimport React from 'react';\r\n// import { useDispatch } from 'react-redux';\r\n// import { addProductsToCart } from '../../redux/actions';\r\n\r\nfunction Card({ card }) {\r\n  // const dispatch = useDispatch();\r\n\r\n  return (\r\n    <li className=\"item\">\r\n      <img className=\"item__image\" src={card.image} alt={card.name}></img>\r\n      <h2 className=\"item__title\">{card.name}</h2>\r\n      <p className=\"item__price\">Price {card.price} &#8381;</p>\r\n      <button\r\n        className=\"item__button\"\r\n        /* onClick={() => dispatch(addProductsToCart(card))} */\r\n      >\r\n        Купить\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import './Main.css';\r\nimport React from 'react';\r\nimport Card from '../Card/Card';\r\n\r\nfunction Main({ cards }) {\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"goods\">\r\n        <ul className=\"goods__container\">\r\n          {cards.map((card) => (\r\n            <Card card={card} key={Math.random()} />\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import './CartListFooter.css';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nfunction CartListFooter() {\r\n  const products = useSelector((state) => state.cart.products);\r\n  const totalPrice = products.reduce(\r\n    (prev, next) => prev + next.quantity * next.price,\r\n    0\r\n  );\r\n  return (\r\n    <section>\r\n      <p\r\n        className={`cartlist-footer ${\r\n          totalPrice ? 'cartlist-footer_visible' : ''}`}>\r\n        Total price is {totalPrice} &#8381;\r\n      </p>\r\n      <p\r\n        className={`cartlist-footer ${\r\n          totalPrice ? '' : 'cartlist-footer_visible'}`}>\r\n        Cart is Empty\r\n      </p>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default CartListFooter;\r\n","import './CartList.css';\r\nimport React from 'react';\r\n /* import {\r\n  removeItemFromCart,\r\n  removeTotalItemFromCart,\r\n  addProductsToCart,\r\n} from '../../redux/actions'; */\r\n\r\nfunction CartList({ item/* , dispatch  */}) {\r\n  return (\r\n    <li className=\"cart-item\">\r\n      <img className=\"cart-item__image\" src={item.image} alt={item.name}></img>\r\n      <h2 className=\"cart-item__title\">{item.name}</h2>\r\n      <p className=\"cart-item__price\">{item.price} &#8381;</p>\r\n      <button\r\n        className=\"cart-item__btn-count\"\r\n        /* onClick={() => dispatch(removeItemFromCart(item))} */\r\n      >\r\n        -\r\n      </button>\r\n      <p className=\"cart-item__quantity\">{item.quantity}</p>\r\n      <button\r\n        className=\"cart-item__btn-count\"\r\n        /* onClick={() => dispatch(addProductsToCart(item))} */\r\n      >\r\n        +\r\n      </button>\r\n      <button\r\n        className=\"cart-item__btn-delete\"\r\n        /* onClick={() => dispatch(removeTotalItemFromCart(item))} */\r\n      >\r\n        Удалить товар\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default CartList;\r\n","import './Cart.css';\r\nimport React from 'react';\r\nimport CartListFooter from '../CartListFooter/CartListFooter';\r\nimport { useSelector } from 'react-redux';\r\nimport CartList from '../CartList/CartList';\r\nfunction Cart({ dispatch, item, products}) {\r\n  const goods = useSelector((state) => state.cart.products);\r\n\r\n  return (\r\n    <>\r\n      <ul className=\"cart-items\">\r\n        {goods.map((item, i) => (\r\n          <CartList item={item} key={Math.random()} dispatch={dispatch} />\r\n        ))}\r\n      </ul>\r\n      <CartListFooter item={item} products={products} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Cart;\r\n","import './Header.css';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction Header() {\r\n  const products = useSelector((state) => state.cart.products);\r\n  const totalQuantity = products.reduce(\r\n    (prev, next) => prev + next.quantity,\r\n    0\r\n  );\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__navbar\">\r\n        <Link to=\"/\" className=\"link-decor\">\r\n          <p className=\"header__navbar-link\">Каталог</p>\r\n        </Link>\r\n        <Link to=\"/cart\" className=\"link-decor cart-position\">\r\n          <button className=\"header__cart\">\r\n            <p\r\n              className={`header__cart-total ${\r\n                totalQuantity > 0 ? 'header__cart-total_enabled' : ''\r\n              }`}\r\n            >\r\n              {totalQuantity}\r\n            </p>\r\n          </button>\r\n        </Link>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const REQUEST_CARDS = 'GET/REQUEST_CARDS';\r\nexport const FETCH_CARDS = 'POST/FETCH_CARDS';\r\nexport const ADD_PRODUCT = 'CART/ADD_PRODUCT';\r\nexport const REMOVE_PRODUCT = 'CART/REMOVE_PRODUCT';\r\nexport const REMOVE_ITEM = 'CART/REMOVE_ITEM';\r\n","import './App.css';\r\nimport React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Main from '../Main/Main';\r\nimport Cart from '../Cart/Cart';\r\nimport Header from '../Header/Header';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { requestCards } from '../../redux/actions';\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const cards = useSelector((state) => state.cards.fetchedCards);\r\n\r\n  React.useEffect(() => {\r\n    dispatch(requestCards());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"page__container\">\r\n        <Header />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Main cards={cards} component={Main}/>\r\n          </Route>\r\n          <Route path=\"/cart\">\r\n            <Cart dispatch={dispatch} />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {\r\n  REQUEST_CARDS,\r\n  ADD_PRODUCT,\r\n  REMOVE_PRODUCT,\r\n  REMOVE_ITEM,\r\n} from './types';\r\n\r\nexport function requestCards() {\r\n  return {\r\n    type: REQUEST_CARDS,\r\n  };\r\n}\r\n\r\nexport function addProductsToCart(item) {\r\n  return {\r\n    type: ADD_PRODUCT,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function removeItemFromCart(item) {\r\n  return {\r\n    type: REMOVE_PRODUCT,\r\n    payload: item,\r\n  };\r\n}\r\n\r\nexport function removeTotalItemFromCart(item) {\r\n  return {\r\n    type: REMOVE_ITEM,\r\n    payload: item,\r\n  };\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { FETCH_CARDS } from './types';\r\n\r\nconst initialState = {\r\n\tfetchedCards: [],\r\n};\r\n\r\nexport const cardsReducer = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase FETCH_CARDS:\r\n\t\t\taction.payload.forEach((item, i) => (item.id = i + 1));\r\n\t\t\treturn { ...state, fetchedCards: action.payload };\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { ADD_PRODUCT, REMOVE_PRODUCT, REMOVE_ITEM } from './types';\r\n\r\nconst initialState = {\r\n  products: [],\r\n};\r\n\r\nexport const cartReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT:\r\n      const existingCartItem = state.products.find(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n\r\n      if (!existingCartItem) {\r\n        action.payload.quantity = 1;\r\n\r\n        return {\r\n          ...state,\r\n          products: [action.payload, ...state.products],\r\n        };\r\n      } else {\r\n        existingCartItem.quantity += 1;\r\n\r\n        return {\r\n          ...state,\r\n          products: [...state.products],\r\n        };\r\n      }\r\n\r\n    case REMOVE_PRODUCT:\r\n      if (action.payload.quantity > 1) {\r\n        action.payload.quantity -= 1;\r\n\r\n        return {\r\n          ...state,\r\n          products: [...state.products],\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          products: state.products.filter((item) => item !== action.payload),\r\n        };\r\n      }\r\n    case REMOVE_ITEM:\r\n      action.payload.quantity = 0;\r\n      return {\r\n        ...state,\r\n        products: state.products.filter((item) => item.quantity !== 0),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { cardsReducer } from './cardsReducer';\r\nimport { cartReducer } from './cartReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n\tcards: cardsReducer,\r\n\tcart: cartReducer,\r\n});\r\n","import { call, put, takeEvery } from '@redux-saga/core/effects';\r\nimport { REQUEST_CARDS, FETCH_CARDS } from './types';\r\n\r\nexport function* sagaWatcher() {\r\n  yield takeEvery(REQUEST_CARDS, sagaWorker);\r\n}\r\n\r\nfunction* sagaWorker() {\r\n  try {\r\n    // add loader\r\n    const payload = yield call(fetchCards);\r\n    yield put({ type: FETCH_CARDS, payload });\r\n    // remove loader\r\n  } catch (err) {\r\n    console.log({ message: err.message });\r\n  }\r\n}\r\n\r\n// перенести в Api.js\r\nexport async function fetchCards() {\r\n  const response = await fetch('https://run.mocky.io/v3/06479013-df37-452e-afe5-bb5ec47746f9');\r\n  return await response.json();\r\n}\r\n","import { applyMiddleware, compose, createStore } from 'redux';\r\nimport createSagaMiddleware from '@redux-saga/core';\r\nimport { rootReducer } from './rootReducer';\r\nimport { sagaWatcher } from './sagas';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\n\r\nimport storage from 'redux-persist/lib/storage';\r\nconst persistConfig = {\r\n\tkey: 'root',\r\n\tstorage,\r\n};\r\n\r\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst saga = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n\tpersistedReducer,\r\n\r\n\tcompose(\r\n\t\tapplyMiddleware(saga)\r\n\t)\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nsaga.run(sagaWatcher);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { persistor } from './redux/store';\r\nimport { store } from './redux/store'\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<BrowserRouter basename={process.env.PUBLIC_URL} >\r\n\t\t\t<Provider store={store}>\r\n\t\t\t\t<PersistGate persistor={persistor}>\r\n\t\t\t\t\t<App />\r\n\t\t\t\t</PersistGate>\r\n\t\t\t</Provider>\r\n\t\t</BrowserRouter>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}